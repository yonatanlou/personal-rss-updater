name: Daily RSS Check

on:
  schedule:
    # Run daily at 9:00 AM UTC (adjust timezone as needed)
    - cron: '0 9 * * 5'
  workflow_dispatch:  # Allow manual triggering

jobs:
  rss-check:
    environment: prod
    permissions:
      contents: write
    env:
      EMAIL_USERNAME: ${{ secrets.EMAIL_USERNAME }}
      EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}

    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"

    - name: Install dependencies
      run: uv sync

    - name: Verify blogs.json exists
      run: |
        if [ -f config/app/blogs.json ]; then
          echo "✅ Found blogs.json at config/app/blogs.json"
        elif [ -f blogs.json ]; then
          echo "✅ Found blogs.json at root (legacy location)"
        else
          echo "❌ No blogs.json found at config/app/blogs.json or root directory"
          exit 1
        fi

    - name: Check if blog states exist, if not initialize
      env:
        EMAIL_USERNAME: ${{ secrets.EMAIL_USERNAME }}
        EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
      run: |
        echo "Checking environment variables..."
        echo "EMAIL_USERNAME is set: $([[ -n "$EMAIL_USERNAME" ]] && echo "yes" || echo "no")"
        echo "EMAIL_PASSWORD is set: $([[ -n "$EMAIL_PASSWORD" ]] && echo "yes" || echo "no")"

        if [ ! -f data/blog_states.json ]; then
          echo "No data/blog_states.json found, running initialization..."
          uv run python -m rss_updater.main init
        else
          echo "Found existing blog_states.json"
        fi


    - name: Run RSS updater
      env:
        EMAIL_USERNAME: ${{ secrets.EMAIL_USERNAME }}
        EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
      run: |
        uv run python -m rss_updater.main

    - name: Commit and push updated blog states

      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"

        if [ -f data/blog_states.json ]; then
          git add data/blog_states.json

          if git diff --staged --quiet; then
            echo "No changes to blog_states.json"
          else
            git commit -m "Update blog states - $(date -u '+%Y-%m-%d %H:%M:%S UTC')"
            git push
            echo "✅ Blog states updated and pushed"
          fi
        else
          echo "❌ data/blog_states.json not found"
        fi
